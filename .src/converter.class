' Gambas class file

Create Static
Create Private

Public sGambas As String[]
Public sPartes As String[]
Public sLine As String
Public iIndex As Integer

Public cDictionary As New Collection
Public SelectOpen As Boolean
Public ForOpen As Boolean
Public EndOpen As Boolean
Public IfOpen As Boolean

Public Sub Init()

  cDictionary = ["if": "if", "then": "{", "print": "stdout.printf", "end": "}", "for": "for", "return": "return"]

End

Public Sub ConvertLine()

  Dim s, s2 As String

  EndOpen = False
  IfOpen = False
  ForOpen = False
  SelectOpen = False

  ' leo una linea
  ReadLine

  ' la divido
  sPartes = Split(sLine, " ", Chr(34), True, True)
  If sPartes.Count = 0 Then                               ' es una linea en blanco
    WriteLine("")
    Return
  Endif
  ' analizo
  Select Case Lower(sPartes[0])
    Case "if", "select"
      ConvertConditional()
    Case "for", "do", "while"
      ConvertLoop()
    Case "public", "private", "function", "sub", "property", "procedure", "dim", "static", "fast"
      ConvertDeclares()

    Case "'", "''"
      WriteLine("// " & Mid(sLine, 2))
    Case "end", "endif"
      WriteLine("}")

    Case Else
      WriteLine(ConvertSentences(sLine))

  End Select

End

'' convierto las estructuras de control condicionales
Public Sub ConvertConditional()

  Dim sVala, sCondi, sSentencia As String
  Dim i As Integer

  ' analizo
  Select Case Lower(sPartes[0])
    Case "if"
      sVala &= "if ("
      Do

        Inc i
        If Lower(sPartes[i]) = "then" Then Break
        sCondi &= ConvertBool(sPartes[i])
      Loop
      sVala &= sCondi & ") "
      ' ahora puede haber dos casos,
      ' If condi Then cosas
      If i = sPartes.Max Then
        ' no hay mas palabras, es un If con EndIf
        sVala &= "{"
        WriteLine(sVala)
        ConvertLine()

      Else
        ' rearmo la sentencia
        Do

          Inc i
          sSentencia &= sPartes[i]
        Loop Until i = sPartes.Max

        sVala &= ConvertSentences(sSentencia)
      Endif

  End Select

End

'' convierto los loops
Public Sub ConvertLoop()

  Dim sVala, sCondi, sSentencia As String
  Dim i As Integer

  ' analizo
  Select Case Lower(sPartes[0])
    Case "if"
      sVala &= "if ("
      Do
        If sPartes[i] = "then" Then Break
        Inc i
        sCondi &= ConvertBool(sPartes[i])
      Loop
      sVala &= sCondi & ") "
      ' ahora puede haber dos casos,
      ' If condi Then cosas

  End Select

End

Public Function ConvertSentences(sInstruction As String) As String

  ' esto solo puede ser un llamado a funcion o sub o una asignacion, ejemplos:
  ' a = CFloat(s$) ^ c
  ' CallSub(arg1, arg2)
  ' i = e And d Xor 5

  Return sInstruction & ";"

End

Public Function ConvertDeclares() As String

  ' esto solo puede ser un llamado a funcion o sub o una asignacion, ejemplos:
  ' a = CFloat(s$) ^ c
  ' CallSub(arg1, arg2)
  ' i = e And d Xor 5

End

Public Function ConvertBool(sIn As String) As String

  Select Case Lower(sIn)
    Case "="
      Return "=="
    Case "&"
      Return "&&"
    Case "or"
      Return "||"
    Case "not"
      Return "=="
    Case "xor"
      Return "!="

    Case Else
      Return sIn

  End Select

End

Public Function ConvertLogic(sIn As String) As String

  Select Case Lower(sIn)
    Case "="
      Return "=="
    Case "&"
      Return "&&"
    Case "or"
      Return "||"
    Case "not"
      Return "!"
    Case "xor"
      Return "!="

    Case Else
      Return sIn

  End Select

End

Public Function ConvertLang(sIn As String) As String

  Select Case Lower(sIn)
    Case "if"
      If EndOpen Then
        Return ""
      Else
        IfOpen = True
        Return "if"

      End If
    Case "select"
      SelectOpen = True
      Return "swich"
    Case "case"
      If SelectOpen Then
        Return ""
      Else
        Return "case"
      End If

    Case "then"
      Return "{"
    Case "end"
      EndOpen = True
      Return "}"
    Case "end"
      Return "}"

    Case Else
      Return sIn

  End Select

End

Public Sub Convert()

  Dim sVala, sGB As String

  Dim sPartes As String[], s, s2 As String

  FMain.txtValaCode.Clear
  sGambas = Split(FMain.txtGambasCode.Text, gb.Cr & gb.CrLf)
  iIndex = 0

  Do
    ConvertLine()

    If iIndex >= sGambas.Count Then Break
  Loop

End

Private Sub ReadLine()

  sLine = sGambas[iIndex]
  Inc iIndex

End

Private Sub WriteLine(sText As String)

  FMain.txtValaCode.Text &= sText & gb.Lf

End
